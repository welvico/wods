name: Daily IP Collection

on:
  #schedule:
    #- cron: '0 22 * * *'  # 北京时间每天早上6点执行
  workflow_dispatch:  # 手动触发

permissions:
  contents: write
  
jobs:
  collect_ips:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Git Identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"  

      - name: Delete IP Folder
        run: |
          if [ -d "ip/" ]; then
            rm -rf ip/
            git rm -r --cached ip/
            git commit -m "Delete IP folder"
            git push
          else
            echo "ip/ directory not found, skipping deletion"
          fi
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}

      - name: Delete Result Folder
        run: |
          if [ -d "result/" ]; then
            rm -rf result/
            git rm -r --cached result/
            git commit -m "Delete Result folder"
            git push
          else
            echo "result/ directory not found, skipping deletion"
          fi
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}
          
      - name: Create IP directory
        run: mkdir -p ip

      - name: Create Result directory
        run: mkdir -p result
              
      - name: List template files
        run: |
          find template -type f -name "*.txt" -print > template_files.txt
          cat template_files.txt

      - name: Extract IPs from template files
        run: |
          while IFS= read -r file; do
            filename=$(basename "$file" .txt)
            echo "Processing file: $filename"
            content=$(curl -sSL "https://raw.githubusercontent.com/redrainl/iptv/main/speedtest/result/result_${filename}.txt" | awk '{print $2}')
            if [[ -n "$content" && "$content" != "404: Not Found" && "$content" != "Not" ]]; then
              echo "$content" > "ip/${filename}.txt"
              cat "ip/${filename}.txt"  # 输出文件内容以便调试
            else
              echo "Skipping file: $filename because content is empty or '404: Not Found'"
            fi
          done < template_files.txt

      - name: Configure Git
        env:
          PAT: ${{ secrets.GITHUBS_TOKEN }}
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"
          
      - name: Add files to Git
        run: |
          git add ip/*.txt
          
      - name: Check Git status
        run: |
          git status
          
      - name: Commit changes
        run: |
          git commit -m "Update IP files" || echo "Nothing to commit"
          
      - name: Push changes
        run: |
          git push origin HEAD || echo "Push failed"
     
